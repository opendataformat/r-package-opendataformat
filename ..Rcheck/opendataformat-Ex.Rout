
R version 4.4.0 (2024-04-24 ucrt) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "opendataformat"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> base::assign(".ExTimings", "opendataformat-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('opendataformat')
Loading required package: crayon
Loading required package: cli

Attaching package: 'cli'

The following object is masked from 'package:crayon':

    num_ansi_colors

Loading required package: magrittr
Loading required package: xml2
Loading required package: data.table
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("docu_odf")
> ### * docu_odf
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: docu_odf
> ### Title: Get documentation from R data frame.
> ### Aliases: docu_odf
> 
> ### ** Examples
> 
> # get example data from the opendataformat package
> df <- get(data("data_odf"))
> 
> # view documentation about the dataset in the language that is currently set
> ## Not run: 
> ##D docu_odf(df)
> ## End(Not run)
> 
> # view information from a selected variable in language "en"
> ## Not run: 
> ##D docu_odf(df$bap87, languages = "en")
> ## End(Not run)
> 
> # view dataset information for all available languages
> ## Not run: 
> ##D docu_odf(df, languages = "all")
> ## End(Not run)
> 
> # print information to the R console
> ## Not run: 
> ##D docu_odf(df$bap87, style = "print")
> ## End(Not run)
> 
> # print information to the R viewer
> ## Not run: 
> ##D docu_odf(df$bap87, style = "viewer")
> ## End(Not run)
> 
> # Since the label for language de is missing, in this case the 
> # english label will be displayed additionally.
> ## Not run: 
> ##D attributes(df$bap87)["label_de"]<-""
> ##D docu_odf(df$bap87, languages="de", style = "console", replace_missing=T)
> ## End(Not run)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("docu_odf", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("labels_odf")
> ### * labels_odf
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: labels_odf
> ### Title: Get variable labels or other metadata from a data frame in
> ###   opendataformat.
> ### Aliases: labels_odf
> 
> ### ** Examples
> 
> # get example data from the opendataformat package
> df <- get(data("data_odf"))
> # view the variable labels for all variables in English
> labels_odf(input = df, language = "en", valuelabels = FALSE)
                              bap87                             bap9201 
                   "Current Health"    "hours of sleep, normal workday" 
                            bap9001                             bap9002 
    "Pressed For Time Last 4 Weeks" "Run-down, Melancholy Last 4 Weeks" 
                            bap9003                               bap96 
       "Well-balanced Last 4 Weeks"                            "Height" 
                               name 
                        "Firstname" 
> 
> # view the value labels for variable bap87 in English
> labels_odf(input = df$bap87, language = "en", valuelabels = FALSE)
           bap87 
"Current Health" 
> 
> # view the description for variable bap87 in English
> labels_odf(input = df$bap87, language = "en", retrieve = "description")
                                                  bap87 
"Question: How would you describe your current health?" 
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("labels_odf", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("read_odf")
> ### * read_odf
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: read_odf
> ### Title: Read data specified as Open Data Format.
> ### Aliases: read_odf
> 
> ### ** Examples
> 
> # get path to example data from the opendataformat package (data.zip)
> path <- system.file("extdata", "data.zip", package="opendataformat")
> path
[1] "C:/Users/thartl/OneDrive - DIW Berlin/Open Data Format Project/R/R-Packages/r-package-opendataformat/..Rcheck/opendataformat/extdata/data.zip"
> 
> # read example data specified as Open Data Format from ZIP file
> df <- read_odf(file = path)
> df
   bap87 bap9201 bap9001 bap9002 bap9003 bap96      name
1      4      -2       1      -1       2 -2.00     Jakob
2      3       5      -2       1       4  1.57      Luca
3     NA      -1      -1       2      -1  1.92    Emilia
4      1       9      -2       2       4  1.85        -1
5     -1       4       2       3       1  1.91   Johanna
6      3       4      -1       4      -2  1.80      Paul
7      1       9       2      -1      -1  1.80          
8      5       6       1      -1       1  1.96       Mia
9      5       5       5       3       1  1.64       Ben
10    -2       4       4      -1      -2  1.93     Jakob
11    -1       4       2       1       5  1.93     Anton
12    -2       5       3      -2       4    NA Charlotte
13     3      -1       2       1       2  1.74      Luca
14     2      -2      -2       4      -1  1.65     Maria
15     5      -1      -2      -1      -1  1.80   Johanna
16     4       5       1       3      -1  1.58      Emma
17     3       7       1       2      -2  1.95     Felix
18     3      NA       5       3      -2  1.98     David
19    -2       8       1       4       5  1.61        -2
20     2       8       3       1       2  1.83     Anton
> attributes(df)
$names
[1] "bap87"   "bap9201" "bap9001" "bap9002" "bap9003" "bap96"   "name"   

$row.names
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20

$name
[1] "bap"

$description_en
[1] "The data were collected as part of the SOEP-Core study using the questionnaire \"Living in Germany - Survey 2010 on the social situation - Personal questionnaire for all. This questionnaire is addressed to the individual persons in the household. A view of the survey instrument can be found here: https://www.diw.de/documents/dokumentenarchiv/17/diw_01.c.369781.de/soepfrabo_personen_2010.pdf"

$description_de
[1] "Die Daten wurden im Rahmen der Studie SOEP-Core mittels des Fragebogens „Leben in Deutschland – Befragung 2010 zur sozialen Lage - Personenfragebogen für alle“ erhoben. Dieser Fragebogen richtet sich an die einzelnen Personen im Haushalt. Eine Ansicht des Erhebungsinstrumentes finden Sie hier: https://www.diw.de/documents/dokumentenarchiv/17/diw_01.c.369781.de/soepfrabo_personen_2010.pdf"

$label_en
[1] "Data from individual questionnaires 2010"

$label_de
[1] "Daten vom Personenfragebogen 2010"

$url
[1] "https://paneldata.org/soep-core/data/bap"

$languages
[1] "en" "de"

$lang
[1] "en"

$label
[1] "Data from individual questionnaires 2010"

$class
[1] "data.frame" "odf"    

> attributes(df$bap87)
$name
[1] "bap87"

$label_en
[1] "Current Health"

$label_de
[1] "Gesundheitszustand gegenwärtig"

$description_en
[1] "Question: How would you describe your current health?"

$description_de
[1] "Frage: Wie würden Sie Ihren gegenwärtigen Gesundheitszustand beschreiben?"

$type
[1] "numeric"

$url
[1] "https://paneldata.org/soep-core/data/bap/bap87"

$labels_en
Does not apply      No Answer      Very good           Good   Satisfactory 
            -2             -1              1              2              3 
          Poor            Bad 
             4              5 

$labels_de
  trifft nicht zu      keine Angabe          Sehr gut               Gut 
               -2                -1                 1                 2 
Zufriedenstellend       Weniger gut          Schlecht 
                3                 4                 5 

$languages
[1] "en" "de"

$lang
[1] "en"

$label
[1] "Current Health"

> 
> # read example data with language selection
> df <- read_odf(file = path, languages = "de")
> attributes(df$bap87)
$name
[1] "bap87"

$label_de
[1] "Gesundheitszustand gegenwärtig"

$description_de
[1] "Frage: Wie würden Sie Ihren gegenwärtigen Gesundheitszustand beschreiben?"

$type
[1] "numeric"

$url
[1] "https://paneldata.org/soep-core/data/bap/bap87"

$labels_de
  trifft nicht zu      keine Angabe          Sehr gut               Gut 
               -2                -1                 1                 2 
Zufriedenstellend       Weniger gut          Schlecht 
                3                 4                 5 

$languages
[1] "de"

$lang
[1] "de"

$label
[1] "Gesundheitszustand gegenwärtig"

> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("read_odf", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("setlanguage_odf")
> ### * setlanguage_odf
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: setlanguage_odf
> ### Title: Change language of dataframe metadata
> ### Aliases: setlanguage_odf
> 
> ### ** Examples
> 
> # get example data from the opendataformat package
> df <- get(data("data_odf"))
> 
> # Switch dataset df to language "en" 
> df <- setlanguage_odf(df, language = "en")
> 
> # Display dataset information for dataset df in language "en"
> docu_odf(df)
Dataset:  bap
Label:
[en]Data from individual questionnaires 2010
Description:
[en]The data were collected as part of the SOEP-Core study using the questionnaire "Living in Germany - Survey 2010 on the social situation - Personal questionnaire for all. This questionnaire is addressed to the individual persons in the household. A view of the survey instrument can be found here: https://www.diw.de/documents/dokumentenarchiv/17/diw_01.c.369781.de/soepfrabo_personen_2010.pdf
languages:
    en de (active: en)
url:
    https://paneldata.org/soep-core/data/bap
Error in viewer(htmlFile) : could not find function "viewer"
Calls: docu_odf
Execution halted
