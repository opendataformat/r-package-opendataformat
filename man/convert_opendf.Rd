% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_opendf.R
\name{convert_opendf}
\alias{convert_opendf}
\title{Conversion filter for data that is specified as Open Data Format.}
\usage{
convert_opendf(
  format,
  input,
  output,
  languages,
  variables = "yes",
  export_data
)
}
\arguments{
\item{format}{Specifies the conversion step, e.g. \code{format = "xml2csv"}.}

\item{input}{Input data, e. g.
\itemize{
\item path to ZIP file that contains data that is stored in the external Open Data Format,
\item path to directory that contains data that is stored in the internal Open Data Format,
\item or name of R data frame, e. g. df
}}

\item{output}{Output data, e. g.
\itemize{
\item path to ZIP file that will contain data that is stored in the external Open Data Format,
\item path to directory that will contain data that is stored in the internal Open Data Format
}}

\item{languages}{For some conversion steps (xml2csv, xml2r, r2csv, r2xml), you can select the language in which the descriptions
and labels of the data will be converted.
\itemize{
\item By default all available language variants are converted (\code{languages = "all"}).
\item You can also choose to convert only the default language (\code{languages = "default"}),
\item or you can select the language by language code, e.g. \code{languages = "en"}.
}}

\item{variables}{For some conversion steps (r2csv, csv2xml, r2xml), you can choose,
if all dataset variables should be converted.}

\item{export_data}{For some conversion steps (csv2xml, r2xml), you can choose,
if you want to export the file that holds the data (data.csv).}
}
\value{
Converted data and metadata that are specified within
"Open Data Format" concept.
}
\description{
Data stored in an Open Data Format can be converted using the
convert_opendf() function. Several conversion steps are possible:
\itemize{
\item xml2csv: converts the external Open Data Format (XML and CSV files)
to the internal Open Data Format (CSV files)
\item csvr2: converts the internal Open Data Format to an R dataframe
\item xml2r: converts the external Open Data Format to an R dataframe
\item r2csv: converts an R data frame to the internal Open Data Format
\item csv2xml: converts the internal Open Data Format to the external Open Data Format
\item r2xml: converts an R data frame to the external Open Data Format
}
}
\examples{

# xml2csv: converts the external Open Data Format (XML and CSV files)
# to the internal Open Data Format (CSV files)
## get path to example data from the opendataformat package (data.zip)
path <- system.file("extdata", "data.zip", package="opendataformat")
## convert
\dontrun{
convert_opendf(
  format = "xml2csv",
  input = path,
  output = "mydir",
  languages = "all"
)
}

# csvr2: converts the internal Open Data Format to an R dataframe
## get path to example data from the opendataformat package
## (data_csv directory containing data.csv, dataset.csv, variables.csv, categories.csv)
path <- system.file("extdata", "data_csv", package="opendataformat")
## convert
\dontrun{
df <- convert_opendf(
  format = "csv2r",
  input = path
)
}

# xml2r: converts the external Open Data Format to an R dataframe
## get path to example data from the opendataformat package (data.zip)
path <- system.file("extdata", "data.zip", package="opendataformat")
## convert
\dontrun{
df <- convert_opendf(
  format = "xml2r",
  input = path,
  languages = "en"
)
}

# r2csv: converts an R data frame to the internal Open Data Format
## get example data from the opendataformat package
df <- get(data("data_opendf"))
## convert
\dontrun{
convert_opendf(
  format = "r2csv",
  input = df,
  output = "mydir",
  languages = "default",
  export_data = "yes"
)
}


# csv2xml: converts the internal Open Data Format to the external Open Data Format
## get path to example data from the opendataformat package
## (data_csv directory containing data.csv, dataset.csv, variables.csv, categories.csv)
path <- system.file("extdata", "data_csv", package="opendataformat")
## convert
\dontrun{
convert_opendf(
  format = "csv2xml",
  input = "mydir",
  output = "myzip",
  export_data = "no"
)
}

# r2xml: converts an R data frame to the external Open Data Format
## get example data from the opendataformat package
df <- get(data("data_opendf"))
## convert
\dontrun{
convert_opendf(
  format = "r2xml",
  input = df,
  output = "myzip",
  languages = "en",
  variables = "no",
  export_data = "no"
)
}

}
\seealso{
More information about the Open Data Format specification and
data examples are available here:
\url{https://git.soep.de/opendata/}
}
