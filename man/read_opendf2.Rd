% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_opendf2.R
\name{read_opendf2}
\alias{read_opendf2}
\title{Read data specified as Open Data Format.}
\usage{
read_opendf2(
  file,
  languages = "all",
  nrows = -1,
  skip = 0,
  check.names = T,
  colClasses = NA
)
}
\arguments{
\item{file}{the name of the file which the data are to be read from.
By default all available language variants are imported (\code{languages = "all"}).}

\item{languages}{integer: the maximum number of rows to read in. Negative and other invalid values are ignored.}

\item{nrows}{Select the number of rows to be skipped.}

\item{skip}{integer: the number of lines of the data file to skip before beginning to read data.}

\item{check.names}{logical. If TRUE then the names of the variables in the data frame are checked to ensure that they are syntactically valid variable names. If necessary they are adjusted (by make.names) so that they are, and also to ensure that there are no duplicates.}

\item{colClasses}{Possible values are NA (the default, when type.convert is used), "NULL" (when the column is skipped), one of the atomic vector classes (logical, integer, numeric, complex, character, raw), or "factor", "Date" or "POSIXct". Otherwise there needs to be an as method (from package methods) for conversion from "character" to the specified formal class.
Note that colClasses is specified per column (not per variable) and so includes the column of row names (if any).}
}
\value{
R dataframe with attributes including dataset and variable information.
}
\description{
Import data from the Open Data Format to an R data frame.
}
\examples{
# get path to example data from the opendataformat package (data.zip)
path <- system.file("extdata", "data.zip", package="opendataformat")
path

# read example data specified as Open Data Format from ZIP file
df <- read_opendf2(file = path)
df
attributes(df)
attributes(df$bap87)

# read example data with language selection
df <- read_opendf(file = path, languages = "de")
attributes(df$bap87)

}
